{"version":3,"sources":["env/env.js","DefaultCode.js","App.js","index.js"],"names":["defaultCode","c","cpp","python","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","App","useState","myCode","setCode","result","setResult","lang","setlang","loading","setLoading","input","setinput","darkmode","setDarkMode","onSubmitHandler","e","a","preventDefault","alert","window","scrollTo","top","behavior","mystate","code","localStorage","getItem","JSON","parse","console","log","axios","post","env","then","res","data","err","error","output","catch","classes","className","Container","LinearProgress","style","textAlign","FormControl","variant","color","InputLabel","id","Select","labelId","value","onChange","langu","target","clear","onLangSelectHandler","label","MenuItem","FormControlLabel","control","Switch","checked","event","name","inputProps","marginLeft","Paper","elevation","padding","width","height","language","options","selectOnLineNumbers","renderIndentGuides","colorDecorators","cursorBlinking","autoClosingQuotes","find","autoFindInSelection","snippetSuggestions","newcode","setItem","stringify","editorDidMount","display","CircularProgress","Button","onClick","href","TextareaAutosize","disabled","aria-label","minRows","fullwidth","placeholder","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45ba29dc.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  url: \"http://15.207.114.84/api/\",\n};\n","const c = `#include<stdio.h>\n\nint main() {\n    // Your Code will come here\n    return 0;\n}\n`;\nconst cpp = `#include<bits/stdc++.h> \\nusing namespace std;\\n\\nint main() {\\n\\t//Your Code will come here\\n\\treturn 0;\\n}\n`;\n\nconst python = `# Your code will come here\n`;\n\nexport const defaultCode = {\n  c,\n  cpp,\n  python,\n};\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Switch } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport env from \"./env/env\";\n\nimport * as defaultCode from \"./DefaultCode\";\n\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const [myCode, setCode] = useState(defaultCode.defaultCode.cpp);\n  const [result, setResult] = useState(\"Submit Code to See Result\");\n  const [lang, setlang] = useState(\"cpp\");\n  const [loading, setLoading] = useState(false);\n  const [input, setinput] = useState(\"\");\n  const [darkmode, setDarkMode] = useState(false);\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault();\n    alert(\"submit code\");\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n    setLoading(true);\n    let mystate = {\n      code:\n        localStorage.getItem(\"code\") != null\n          ? JSON.parse(localStorage.getItem(\"code\"))\n          : myCode,\n      lang:\n        localStorage.getItem(\"lang\") != null\n          ? localStorage.getItem(\"lang\")\n          : lang,\n      input,\n      result,\n    };\n\n    console.log(mystate);\n\n    axios\n      .post(`${env.url}v1/submit`, mystate)\n      .then((res) => {\n        setLoading(false);\n        const data = res.data;\n        if (data.err) {\n          // Error in user code\n          setResult(data.error);\n        } else {\n          setResult(data.output);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  const onCodeChangeHandler = (newcode, e) => {\n    localStorage.setItem(\"lang\", lang);\n    localStorage.setItem(\"code\", JSON.stringify(newcode));\n\n    setCode(newcode);\n  };\n  const onInputChangeHandler = (e) => {\n    setinput(e.target.value);\n  };\n\n  const editorDidMount = (e) => {\n    console.log(\"EDITOR Loaded\");\n  };\n\n  const onLangSelectHandler = (e) => {\n    const langu = e.target.value;\n    localStorage.clear();\n    setlang(langu);\n    setCode(defaultCode.defaultCode[langu]);\n  };\n\n  const handleChange = (event) => {\n    setDarkMode(!darkmode);\n  };\n\n  const options = {\n    selectOnLineNumbers: true,\n    renderIndentGuides: true,\n    colorDecorators: true,\n    cursorBlinking: \"blink\",\n    autoClosingQuotes: \"always\",\n\n    find: {\n      autoFindInSelection: \"always\",\n    },\n    snippetSuggestions: \"always\",\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={darkmode ? \"fullBodyDark\" : \"fullBody\"}>\n      <Container>\n        {loading ? <LinearProgress /> : <></>}\n\n        <h1\n          style={{\n            textAlign: \"center\",\n          }}\n          className=\"\"\n        >\n          Welcome To Nav Code.\n        </h1>\n\n        <div\n          className=\"row\"\n          // style={{\n          //   display: \"flex\",\n          //   flexWrap: \"wrap\",\n          //   justifyContent: \"space-between\",\n          //   flexDirection: \"row\",\n          // }}\n        >\n          <div className=\"column left\">\n            <div className=\"\">\n              <FormControl\n                variant=\"filled\"\n                className={classes.formControl}\n                style={{ color: darkmode ? \"white\" : \"black\" }}\n              >\n                <InputLabel\n                  style={{ color: darkmode ? \"white\" : \"black\" }}\n                  id=\"demo-simple-select-outlined-label\"\n                >\n                  Language\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={lang}\n                  style={{ color: darkmode ? \"white\" : \"black\" }}\n                  onChange={(e) => onLangSelectHandler(e)}\n                  label=\"Language\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={\"cpp\"}>C++</MenuItem>\n                  <MenuItem value={\"c\"}>C</MenuItem>\n                  <MenuItem value={\"python\"}>Python3</MenuItem>\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                    style={{\n                      color: \"white\",\n                    }}\n                    checked={darkmode}\n                    onChange={handleChange}\n                    color=\"primary\"\n                    name=\"checkedB\"\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                  />\n                }\n                style={{\n                  marginLeft: \"500px\",\n                  textAlign: \"center\",\n                }}\n                label={darkmode ? \"Dark Mode 🌚\" : \"Light Mode 🌞\"}\n              />\n\n              <Paper\n                elevation={3}\n                style={{\n                  padding: \"5px\",\n                }}\n              >\n                <MonacoEditor\n                  width=\"830\"\n                  height=\"500\"\n                  language={\n                    localStorage.getItem(\"lang\") != null\n                      ? localStorage.getItem(\"lang\")\n                      : lang\n                  }\n                  theme={darkmode ? \"vs-dark\" : \"vs-light\"}\n                  value={\n                    localStorage.getItem(\"code\") != null\n                      ? JSON.parse(localStorage.getItem(\"code\"))\n                      : myCode\n                  }\n                  options={options}\n                  onChange={onCodeChangeHandler}\n                  editorDidMount={editorDidMount}\n                />\n              </Paper>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <div>\n                {loading ? (\n                  <CircularProgress />\n                ) : (\n                  <>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={onSubmitHandler}\n                      style={{\n                        margin: \"10px\",\n                      }}\n                    >\n                      Run\n                    </Button>\n                    <p>\n                      if the submission doesn't works please try{\" \"}\n                      <Button\n                        color=\"secondary\"\n                        href=\"http://nav-compiler.herokuapp.com/\"\n                      >\n                        here\n                      </Button>\n                    </p>\n                  </>\n                  // <button className=\"\" onClick={onSubmitHandler}>\n                  //   Submit Code\n                  // </button>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"column right\">\n            <h1>Output:</h1>\n            <div className=\"\">\n              {/* <TextField\n              fullwidth\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={result}\n              disabled={true}\n              style={{\n                height: \"500px\",\n              }}\n            /> */}\n              <TextareaAutosize\n                style={{\n                  width: \"300px\",\n                  height: \"30vh\",\n                }}\n                value={result}\n                disabled={true}\n                aria-label=\"minimum height\"\n                minRows={9}\n                fullwidth\n                placeholder=\"Minimum 3 rows\"\n              />\n            </div>\n            <div\n            // style={{\n            //   marginLeft: \"500px\",\n            // }}\n            >\n              <div className=\"row\">\n                <h3 className=\"\">Provide Input</h3>\n              </div>\n              <div>\n                <textarea\n                  placeholder=\"Give Input\"\n                  className=\"ui-autocomplete-input\"\n                  style={{\n                    width: \"300px\",\n                    height: \"60vh\",\n                  }}\n                  type=\"text\"\n                  value={input}\n                  onChange={onInputChangeHandler}\n                ></textarea>\n                {/* <textarea\n                style={{\n                  width: \"300px\",\n                  height: \"200px\",\n                }}\n                type=\"text\"\n                id=\"input\"\n                value={input}\n                onChange={onInputChangeHandler}\n              ></textarea> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}